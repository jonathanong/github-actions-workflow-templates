name: Node.js CI

on: push

env:
  CODECOV_TOKEN:
  NPM_CONFIG_LOGLEVEL: error
  NPM_CONFIG_JOBS: max
  NPM_CONFIG_PROGRESS: false
  DATABASE_URL: postgres://postgres:postgres@localhost/postgres

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      # https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      # https://github.com/actions/example-services/blob/master/.github/workflows/redis-service.yml
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-cache-os-${{ runner.os }}-node-${{ matrix.node-version }}-package-lock-${{ hashFiles('package.json', 'package-lock.json') }}
    - run: test -d "node_modules" && echo "node_modules already cached" || npm ci
    - name: Cache node_modules/.cache
      uses: actions/cache@v1
      with:
        path: node_modules/.cache
        key: node-modules-cache-os-${{ runner.os }}-node-${{ matrix.node-version }}-package-lock-${{ hashFiles('package-lock.json') }}-run-id-${{ github.run_id }}
        restore-keys: node-modules-cache-os-${{ runner.os }}-node-${{ matrix.node-version }}-package-lock-${{ hashFiles('package-lock.json') }}-
    - run: npx eslint . --cache --cache-location node_modules/.cache/eslint --ignore-path .gitignore
    - run: npm db:setup # whatever command you use to setup your db
    # NOTE: set "cacheDirectory": "node_modules/.cache/jest" in your jest config
    - run: npx jest --coverage --maxWorkers 4
    - run: npx codecov
